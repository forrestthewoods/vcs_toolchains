# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.25)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS FortranCommon FortranEvaluate FortranDecimal FortranLower FortranParser FortranSemantics flangFrontend flangFrontendTool FIRBuilder FIRCodeGen FIRDialectSupport FIRDialect HLFIRDialect HLFIRTransforms FIRSupport FIRTransforms FIRAnalysis bbc flang-new tco f18-parse-demo fir-opt Fortran_main FortranRuntime FIRTestAnalysis)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target FortranCommon
add_library(FortranCommon STATIC IMPORTED)

set_target_properties(FortranCommon PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport"
)

# Create imported target FortranEvaluate
add_library(FortranEvaluate STATIC IMPORTED)

set_target_properties(FortranEvaluate PROPERTIES
  INTERFACE_LINK_LIBRARIES "FortranCommon;FortranDecimal;FortranParser;LLVMSupport"
)

# Create imported target FortranDecimal
add_library(FortranDecimal STATIC IMPORTED)

# Create imported target FortranLower
add_library(FortranLower STATIC IMPORTED)

set_target_properties(FortranLower PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRDialect;FIRDialectSupport;FIRBuilder;FIRSupport;FIRTransforms;HLFIRDialect;MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;MLIRFuncInlinerExtension;MLIRFuncAllExtensions;FortranCommon;FortranParser;FortranEvaluate;FortranSemantics;MLIRAffineToStandard;MLIRFuncDialect;MLIRLLVMDialect;MLIRSCFToControlFlow;LLVMSupport"
)

# Create imported target FortranParser
add_library(FortranParser STATIC IMPORTED)

set_target_properties(FortranParser PROPERTIES
  INTERFACE_LINK_LIBRARIES "FortranCommon;LLVMSupport;LLVMFrontendOpenACC"
)

# Create imported target FortranSemantics
add_library(FortranSemantics STATIC IMPORTED)

set_target_properties(FortranSemantics PROPERTIES
  INTERFACE_LINK_LIBRARIES "FortranCommon;FortranParser;FortranEvaluate;LLVMSupport;LLVMFrontendOpenMP;LLVMFrontendOpenACC;LLVMTargetParser"
)

# Create imported target flangFrontend
add_library(flangFrontend STATIC IMPORTED)

set_target_properties(flangFrontend PROPERTIES
  INTERFACE_LINK_LIBRARIES "FortranParser;FortranSemantics;FortranEvaluate;FortranCommon;FortranLower;FIRDialect;FIRDialectSupport;FIRSupport;FIRBuilder;FIRCodeGen;FIRTransforms;HLFIRDialect;HLFIRTransforms;MLIRTransforms;MLIRBuiltinToLLVMIRTranslation;MLIRLLVMToLLVMIRTranslation;MLIRSCFToControlFlow;MLIRTargetLLVMIRImport;MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;MLIRFuncInlinerExtension;MLIRFuncAllExtensions;LLVMPasses;LLVMAnalysis;LLVMExtensions;LLVMIRReader;LLVMOption;LLVMSupport;LLVMTarget;LLVMTargetParser;LLVMFrontendOpenACC;LLVMFrontendOpenMP;\$<LINK_ONLY:clangBasic>;\$<LINK_ONLY:clangDriver>"
)

# Create imported target flangFrontendTool
add_library(flangFrontendTool STATIC IMPORTED)

set_target_properties(flangFrontendTool PROPERTIES
  INTERFACE_LINK_LIBRARIES "flangFrontend;MLIRPass;LLVMOption;LLVMSupport;\$<LINK_ONLY:clangBasic>;\$<LINK_ONLY:clangDriver>"
)

# Create imported target FIRBuilder
add_library(FIRBuilder STATIC IMPORTED)

set_target_properties(FIRBuilder PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRDialect;FIRDialectSupport;FIRSupport;HLFIRDialect;MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;MLIRFuncInlinerExtension;MLIRFuncAllExtensions"
)

# Create imported target FIRCodeGen
add_library(FIRCodeGen STATIC IMPORTED)

set_target_properties(FIRCodeGen PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRBuilder;FIRDialect;FIRDialectSupport;FIRSupport;MLIRComplexToLLVM;MLIRComplexToStandard;MLIRMathToFuncs;MLIRMathToLLVM;MLIRMathToLibm;MLIROpenMPToLLVM;MLIRBuiltinToLLVMIRTranslation;MLIRLLVMToLLVMIRTranslation;MLIRTargetLLVMIRExport;MLIRVectorToLLVM;LLVMAsmParser;LLVMAsmPrinter;LLVMRemarks;LLVMTargetParser"
)

# Create imported target FIRDialectSupport
add_library(FIRDialectSupport STATIC IMPORTED)

set_target_properties(FIRDialectSupport PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses"
)

# Create imported target FIRDialect
add_library(FIRDialect STATIC IMPORTED)

set_target_properties(FIRDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRDialectSupport;MLIRArithDialect;MLIRBuiltinToLLVMIRTranslation;MLIROpenMPToLLVM;MLIRLLVMToLLVMIRTranslation;MLIRTargetLLVMIRExport;LLVMAsmParser;LLVMAsmPrinter;LLVMRemarks"
)

# Create imported target HLFIRDialect
add_library(HLFIRDialect STATIC IMPORTED)

set_target_properties(HLFIRDialect PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRDialect;MLIRIR;MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;LLVMAsmParser;LLVMAsmPrinter;LLVMRemarks"
)

# Create imported target HLFIRTransforms
add_library(HLFIRTransforms STATIC IMPORTED)

set_target_properties(HLFIRTransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRAnalysis;FIRDialect;FIRBuilder;FIRDialectSupport;FIRSupport;HLFIRDialect;MLIRIR;MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;LLVMAsmParser;LLVMAsmPrinter;LLVMRemarks"
)

# Create imported target FIRSupport
add_library(FIRSupport STATIC IMPORTED)

set_target_properties(FIRSupport PROPERTIES
  INTERFACE_LINK_LIBRARIES "MLIRAffineAnalysis;MLIRAffineDialect;MLIRAffineTransforms;MLIRAffineTransformOps;MLIRAffineUtils;MLIRAMDGPUDialect;MLIRAMDGPUTransforms;MLIRAMDGPUUtils;MLIRAMXDialect;MLIRAMXTransforms;MLIRArithDialect;MLIRArithValueBoundsOpInterfaceImpl;MLIRArithTransforms;MLIRArithUtils;MLIRArmNeonDialect;MLIRArmSMEDialect;MLIRArmSMETransforms;MLIRArmSMEUtils;MLIRArmSVEDialect;MLIRArmSVETransforms;MLIRAsyncDialect;MLIRAsyncTransforms;MLIRBufferizationDialect;MLIRBufferizationTransformOps;MLIRBufferizationTransforms;MLIRComplexDialect;MLIRControlFlowDialect;MLIRDLTIDialect;MLIREmitCDialect;MLIRFuncDialect;MLIRFuncTransforms;MLIRGPUDialect;MLIRGPUTransforms;MLIRGPUTransformOps;MLIRIndexDialect;MLIRIRDL;MLIRLinalgDialect;MLIRLinalgTransformOps;MLIRLinalgTransforms;MLIRLinalgUtils;MLIRLLVMIRTransforms;MLIRLLVMDialect;MLIRNVVMDialect;MLIRROCDLDialect;MLIRMathDialect;MLIRMathTransforms;MLIRMemRefDialect;MLIRMemRefTransformOps;MLIRMemRefTransforms;MLIRMemRefUtils;MLIRMLProgramDialect;MLIRNVGPUDialect;MLIRNVGPUUtils;MLIRNVGPUTransformOps;MLIRNVGPUTransforms;MLIROpenACCDialect;MLIROpenMPDialect;MLIRPDLDialect;MLIRPDLInterpDialect;MLIRQuantDialect;MLIRQuantUtils;MLIRSCFDialect;MLIRSCFTransformOps;MLIRSCFTransforms;MLIRSCFUtils;MLIRShapeDialect;MLIRShapeOpsTransforms;MLIRSparseTensorDialect;MLIRSparseTensorTransforms;MLIRSparseTensorPipelines;MLIRSparseTensorUtils;MLIRSPIRVDialect;MLIRSPIRVModuleCombiner;MLIRSPIRVConversion;MLIRSPIRVTransforms;MLIRSPIRVUtils;MLIRTensorDialect;MLIRTensorInferTypeOpInterfaceImpl;MLIRTensorTilingInterfaceImpl;MLIRTensorTransforms;MLIRTensorTransformOps;MLIRTensorUtils;MLIRTosaDialect;MLIRTosaTransforms;MLIRTransformDialect;MLIRTransformPDLExtension;MLIRTransformDialectTransforms;MLIRTransformDialectUtils;MLIRUBDialect;MLIRVectorDialect;MLIRVectorTransforms;MLIRVectorTransformOps;MLIRVectorUtils;MLIRX86VectorDialect;MLIRX86VectorTransforms;MLIRTestDynDialect;MLIRTosaTestPasses;MLIRFuncInlinerExtension;MLIRFuncAllExtensions;MLIRBuiltinToLLVMIRTranslation;MLIROpenACCToLLVMIRTranslation;MLIROpenMPToLLVMIRTranslation;MLIRLLVMToLLVMIRTranslation;MLIRTargetLLVMIRExport;LLVMTargetParser"
)

# Create imported target FIRTransforms
add_library(FIRTransforms STATIC IMPORTED)

set_target_properties(FIRTransforms PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRBuilder;FIRCodeGen;FIRDialect;FIRDialectSupport;FIRSupport;HLFIRDialect;MLIRAffineUtils;MLIRFuncDialect;MLIRLLVMDialect;MLIRLLVMCommonConversion;MLIRMathTransforms;MLIROpenACCDialect;MLIROpenACCToLLVMIRTranslation;MLIROpenMPDialect"
)

# Create imported target FIRAnalysis
add_library(FIRAnalysis STATIC IMPORTED)

set_target_properties(FIRAnalysis PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRBuilder;FIRDialect;MLIRFuncDialect;MLIRLLVMDialect;MLIRMathTransforms;FIRSupport"
)

# Create imported target bbc
add_executable(bbc IMPORTED)

# Create imported target flang-new
add_executable(flang-new IMPORTED)
set_property(TARGET flang-new PROPERTY ENABLE_EXPORTS 1)

# Create imported target tco
add_executable(tco IMPORTED)

# Create imported target f18-parse-demo
add_executable(f18-parse-demo IMPORTED)

# Create imported target fir-opt
add_executable(fir-opt IMPORTED)

# Create imported target Fortran_main
add_library(Fortran_main STATIC IMPORTED)

# Create imported target FortranRuntime
add_library(FortranRuntime STATIC IMPORTED)

set_target_properties(FortranRuntime PROPERTIES
  INTERFACE_LINK_LIBRARIES "FortranDecimal"
)

# Create imported target FIRTestAnalysis
add_library(FIRTestAnalysis STATIC IMPORTED)

set_target_properties(FIRTestAnalysis PROPERTIES
  INTERFACE_LINK_LIBRARIES "FIRDialect;FIRBuilder;FIRSupport;FIRTransforms;FIRAnalysis;MLIRFuncDialect;MLIRLLVMDialect;MLIRAnalysis;MLIRTestAnalysis"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/FlangTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "LLVMSupport" "MLIRAffineAnalysis" "MLIRAffineDialect" "MLIRAffineTransforms" "MLIRAffineTransformOps" "MLIRAffineUtils" "MLIRAMDGPUDialect" "MLIRAMDGPUTransforms" "MLIRAMDGPUUtils" "MLIRAMXDialect" "MLIRAMXTransforms" "MLIRArithDialect" "MLIRArithValueBoundsOpInterfaceImpl" "MLIRArithTransforms" "MLIRArithUtils" "MLIRArmNeonDialect" "MLIRArmSMEDialect" "MLIRArmSMETransforms" "MLIRArmSMEUtils" "MLIRArmSVEDialect" "MLIRArmSVETransforms" "MLIRAsyncDialect" "MLIRAsyncTransforms" "MLIRBufferizationDialect" "MLIRBufferizationTransformOps" "MLIRBufferizationTransforms" "MLIRComplexDialect" "MLIRControlFlowDialect" "MLIRDLTIDialect" "MLIREmitCDialect" "MLIRFuncDialect" "MLIRFuncTransforms" "MLIRGPUDialect" "MLIRGPUTransforms" "MLIRGPUTransformOps" "MLIRIndexDialect" "MLIRIRDL" "MLIRLinalgDialect" "MLIRLinalgTransformOps" "MLIRLinalgTransforms" "MLIRLinalgUtils" "MLIRLLVMIRTransforms" "MLIRLLVMDialect" "MLIRNVVMDialect" "MLIRROCDLDialect" "MLIRMathDialect" "MLIRMathTransforms" "MLIRMemRefDialect" "MLIRMemRefTransformOps" "MLIRMemRefTransforms" "MLIRMemRefUtils" "MLIRMLProgramDialect" "MLIRNVGPUDialect" "MLIRNVGPUUtils" "MLIRNVGPUTransformOps" "MLIRNVGPUTransforms" "MLIROpenACCDialect" "MLIROpenMPDialect" "MLIRPDLDialect" "MLIRPDLInterpDialect" "MLIRQuantDialect" "MLIRQuantUtils" "MLIRSCFDialect" "MLIRSCFTransformOps" "MLIRSCFTransforms" "MLIRSCFUtils" "MLIRShapeDialect" "MLIRShapeOpsTransforms" "MLIRSparseTensorDialect" "MLIRSparseTensorTransforms" "MLIRSparseTensorPipelines" "MLIRSparseTensorUtils" "MLIRSPIRVDialect" "MLIRSPIRVModuleCombiner" "MLIRSPIRVConversion" "MLIRSPIRVTransforms" "MLIRSPIRVUtils" "MLIRTensorDialect" "MLIRTensorInferTypeOpInterfaceImpl" "MLIRTensorTilingInterfaceImpl" "MLIRTensorTransforms" "MLIRTensorTransformOps" "MLIRTensorUtils" "MLIRTosaDialect" "MLIRTosaTransforms" "MLIRTransformDialect" "MLIRTransformPDLExtension" "MLIRTransformDialectTransforms" "MLIRTransformDialectUtils" "MLIRUBDialect" "MLIRVectorDialect" "MLIRVectorTransforms" "MLIRVectorTransformOps" "MLIRVectorUtils" "MLIRX86VectorDialect" "MLIRX86VectorTransforms" "MLIRTestDynDialect" "MLIRTosaTestPasses" "MLIRFuncInlinerExtension" "MLIRFuncAllExtensions" "MLIRAffineToStandard" "MLIRSCFToControlFlow" "LLVMFrontendOpenACC" "LLVMFrontendOpenMP" "LLVMTargetParser" "MLIRTransforms" "MLIRBuiltinToLLVMIRTranslation" "MLIRLLVMToLLVMIRTranslation" "MLIRTargetLLVMIRImport" "LLVMPasses" "LLVMAnalysis" "LLVMExtensions" "LLVMIRReader" "LLVMOption" "LLVMTarget" "clangBasic" "clangDriver" "MLIRPass" "MLIRComplexToLLVM" "MLIRComplexToStandard" "MLIRMathToFuncs" "MLIRMathToLLVM" "MLIRMathToLibm" "MLIROpenMPToLLVM" "MLIRTargetLLVMIRExport" "MLIRVectorToLLVM" "LLVMAsmParser" "LLVMAsmPrinter" "LLVMRemarks" "MLIRIR" "MLIROpenACCToLLVMIRTranslation" "MLIROpenMPToLLVMIRTranslation" "MLIRLLVMCommonConversion" "MLIRAnalysis" "MLIRTestAnalysis" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
